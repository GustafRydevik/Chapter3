##This jags file assumes a constant incidence of cases

data {
for(i in 1:N){
ones[i]<-1
}
C<-10000
}



model {


for (i in 1:N){ 
for (test in 1:ntest){
   Test.data[i,test]~dlnorm(log(TestMean[i,test]),tau[test]) ###=1/(sd^2)
   TestMean[i,test]<-test.lookup[ndx[i],test]
}
   ndx[i]<-max(1,sum((InfTime[i]>time.lookup)))
}

###############
####Priors#####
###############


for (i in 1:N){
                #InfTime[i]~dexp(lambda)
                ones[i] ~ dbern(p[i])
                is.naive[i]~dinterval(InfTime[i],censorLimit)
                p[i] <- L[i] / C
                L[i]<-(alpha-beta*InfTime[i])*exp(-(alpha-beta*InfTime[i]/2)*InfTime[i])
##Beta is negative, to indicate trend as time increases, or time since infection decrease

 }


EpiStart<-max(InfTime)

##Prior for the observational error

for (test in 1:ntest){
 #tau[test]~dgamma(0.01,0.01)
 tau[test]<-(variance[test])^(-1)
 variance[test]<-(logsd[test])^2
 logsd[test]<-abs(logsd.tmp[test])
 logsd.tmp[test]~dt(0,(1/(log(1.41)/4))^2,10) #mu, tau=precision, k=df
}
alpha~dnorm(0, 0.0001)
beta~dnorm(0, 0.0001)

for(i in 1:N){
InfTime[i]~dgamma(0.001,0.001)
}
}

##Define TestFun as getting data from vectors of time-and-value.


 
